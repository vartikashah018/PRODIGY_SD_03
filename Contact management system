import tkinter as tk
from tkinter import messagebox

class ContactManagementSystem:
    def __init__(self, root):
        self.root = root
        self.root.title("Contact Management System")

        self.contacts = []  # List to store contacts (for simplicity, in-memory storage)

        # GUI Elements
        self.label_name = tk.Label(root, text="Name:")
        self.label_name.grid(row=0, column=0, padx=10, pady=5)
        self.entry_name = tk.Entry(root, width=30)
        self.entry_name.grid(row=0, column=1, padx=10, pady=5)

        self.label_phone = tk.Label(root, text="Phone:")
        self.label_phone.grid(row=1, column=0, padx=10, pady=5)
        self.entry_phone = tk.Entry(root, width=30)
        self.entry_phone.grid(row=1, column=1, padx=10, pady=5)

        self.label_email = tk.Label(root, text="Email:")
        self.label_email.grid(row=2, column=0, padx=10, pady=5)
        self.entry_email = tk.Entry(root, width=30)
        self.entry_email.grid(row=2, column=1, padx=10, pady=5)

        self.button_add = tk.Button(root, text="Add Contact", command=self.add_contact)
        self.button_add.grid(row=3, column=0, columnspan=2, pady=10)

        self.listbox_contacts = tk.Listbox(root, width=50, height=10)
        self.listbox_contacts.grid(row=4, column=0, columnspan=2, padx=10, pady=5)

        self.button_view = tk.Button(root, text="View Contact", command=self.view_contact)
        self.button_view.grid(row=5, column=0, padx=10, pady=5)

        self.button_edit = tk.Button(root, text="Edit Contact", command=self.edit_contact)
        self.button_edit.grid(row=5, column=1, padx=10, pady=5)

        self.button_delete = tk.Button(root, text="Delete Contact", command=self.delete_contact)
        self.button_delete.grid(row=6, column=0, padx=10, pady=5)

    def add_contact(self):
        name = self.entry_name.get()
        phone = self.entry_phone.get()
        email = self.entry_email.get()

        if name and phone and email:
            contact = (name, phone, email)
            self.contacts.append(contact)
            self.update_contact_listbox()
            self.clear_entries()
            messagebox.showinfo("Success", "Contact added successfully.")
        else:
            messagebox.showerror("Error", "Please fill in all fields.")

    def view_contact(self):
        selected_index = self.listbox_contacts.curselection()
        if selected_index:
            contact = self.contacts[selected_index[0]]
            messagebox.showinfo("Contact Information", f"Name: {contact[0]}\nPhone: {contact[1]}\nEmail: {contact[2]}")
        else:
            messagebox.showerror("Error", "Please select a contact from the list.")

    def edit_contact(self):
        selected_index = self.listbox_contacts.curselection()
        if selected_index:
            contact = self.contacts[selected_index[0]]
            self.entry_name.delete(0, tk.END)
            self.entry_name.insert(0, contact[0])
            self.entry_phone.delete(0, tk.END)
            self.entry_phone.insert(0, contact[1])
            self.entry_email.delete(0, tk.END)
            self.entry_email.insert(0, contact[2])
            self.contacts.pop(selected_index[0])
            self.update_contact_listbox()
        else:
            messagebox.showerror("Error", "Please select a contact from the list.")

    def delete_contact(self):
        selected_index = self.listbox_contacts.curselection()
        if selected_index:
            confirm = messagebox.askyesno("Confirm Deletion", "Are you sure you want to delete this contact?")
            if confirm:
                self.contacts.pop(selected_index[0])
                self.update_contact_listbox()
        else:
            messagebox.showerror("Error", "Please select a contact from the list.")

    def update_contact_listbox(self):
        self.listbox_contacts.delete(0, tk.END)
        for contact in self.contacts:
            self.listbox_contacts.insert(tk.END, contact[0])

    def clear_entries(self):
        self.entry_name.delete(0, tk.END)
        self.entry_phone.delete(0, tk.END)
        self.entry_email.delete(0, tk.END)

# Main Application
if __name__ == "__main__":
    root = tk.Tk()
    app = ContactManagementSystem(root)
    root.mainloop()
